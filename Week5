<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="color-scheme" content="dark">
  <title>Week 5 – Requests & Beds</title>
  <link href="https://fonts.googleapis.com/css2?family=DM+Sans:wght@500;600;700&display=swap" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/echarts@5/dist/echarts.min.js"></script>
  <style>
    :root { --bg:#191919; }
    html, body { height:100%; margin:0; background:var(--bg); font-family:'DM Sans', system-ui, -apple-system, Segoe UI, Arial, sans-serif; }
    .wrap { min-height:100%; display:flex; align-items:center; justify-content:center; padding:16px; }
    .box  { width:100%; max-width:650px; }
    .title { text-align:center; color:#fff; font-weight:700; font-size:20px; margin:4px 0 2px; }
    .subtitle { text-align:center; color:#cfcfcf; font-weight:600; font-size:12px; margin:0 0 8px; }
    #chartReq, #chartBeds { width:100%; height:320px; }
    .spacer { height:10px; }
  </style>
</head>
<body>
  <div class="wrap">
    <div class="box">
      <div class="title">Week 5</div>
      <div class="subtitle">Sep 16 – Sep 23, 2025</div>
      <div id="chartReq"></div>
      <div class="spacer"></div>
      <div id="chartBeds"></div>
    </div>
  </div>

  <script>
    // ---------- Week 5 data ----------
    // Fixed category order per row: North, South, West, East, Center, Anywhere in Riyadh
    // City: Riyadh only (others are zero to keep palette consistent)
    const rowsRequests = [
      // city      N  S  W  E  C  Any
      ['Riyadh',  8, 1, 1, 1, 3,  0]
    ];
    const rowsBeds = [
      // city      N    S  W    E  C  Any
      ['Riyadh',  834, 3, 150, 1, 6,  0]
    ];

    const categories = ['North','South','West','East','Center','Anywhere in Riyadh'];
    const colorMap = {
      'North':              '#78C889', // soft green
      'South':              '#6FA8FF', // soft blue
      'West':               '#F07A7A', // soft red
      'East':               '#E6C45A', // soft yellow
      'Center':             '#4EC7CC', // soft teal
      'Anywhere in Riyadh': '#9B51E0'  // soft purple
    };

    function buildChart(elId, rows, titleSuffix, showLegend=true) {
      const cities = rows.map(r => r[0]);
      const totals = rows.map(r => r.slice(1).reduce((a,b)=>a+b,0));

      // which series is the top non-zero segment for each city (for rounded caps)?
      const topIndexByCity = rows.map(r => {
        const vals = r.slice(1);
        for (let i = vals.length - 1; i >= 0; i--) if (vals[i] > 0) return i;
        return -1;
      });

      const baseBar = {
        type: 'bar',
        stack: 'total',
        barWidth: 22,
        itemStyle: { borderRadius: 0, opacity: 0.9 },
        emphasis: { focus: 'self', itemStyle: { opacity: 1, shadowBlur: 10, shadowColor: 'rgba(0,0,0,0.45)' } },
        blur: { itemStyle: { opacity: 0.25 } }
      };

      function valuesFor(catIdx){ return rows.map(r => r[1 + catIdx]); }

      // Build series bottom→top in the same order as categories
      const series = categories.map((cat, catIdx) => {
        const vals = valuesFor(catIdx);
        return {
          ...baseBar,
          name: cat,
          itemStyle: { ...baseBar.itemStyle, color: colorMap[cat] }, // legend color = bars
          data: vals.map((v, cityIdx) => {
            const isTop = (topIndexByCity[cityIdx] === catIdx);
            return isTop ? { value: v, itemStyle: { borderRadius: [6,6,0,0] } } : v;
          })
        };
      });

      // Centered total labels above each column (pill), anchored to full stack height
      series.push({
        name: 'TotalLabels',
        type: 'custom',
        silent: true,
        renderItem: (params, api) => {
          const i = params.dataIndex;
          const total = totals[i];
          const pt = api.coord([cities[i], total]);
          return {
            type: 'text',
            x: pt[0],
            y: pt[1] - 10,
            style: {
              text: String(total),
              textAlign: 'center',
              textVerticalAlign: 'bottom',
              fill: '#fff',
              f
